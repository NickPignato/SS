package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
)

//AutoGenerated molitorfile
type AutoGenerated struct {
	Disks struct {
		Sda struct {
			HSize      string `json:"h_size"`
			Rotational bool   `json:"rotational"`
			Model      string `json:"model"`
			Size       int64  `json:"size"`
		} `json:"sda"`
		Sdb struct {
			HSize      string `json:"h_size"`
			Rotational bool   `json:"rotational"`
			Model      string `json:"model"`
			Size       int64  `json:"size"`
		} `json:"sdb"`
	} `json:"disks"`
	IPAddr       string   `json:"ip_addr"`
	InstallDisks []string `json:"install_disks"`
	Facility     string   `json:"facility"`
	MdUUID       string   `json:"md_uuid"`
	Timestamp    string   `json:"timestamp"`
	Xen          string   `json:"xen"`
	GwAddr       string   `json:"gw_addr"`
	Brand        string   `json:"brand"`
	RaidLevel    string   `json:"raid_level"`
	Fsopts       string   `json:"fsopts"`
	CPUCount     int      `json:"cpu_count"`
	Fs           string   `json:"fs"`
	Location     string   `json:"location"`
	Customerid   int      `json:"customerid,omitempty"`
	Distribution string   `json:"distribution"`
	CPU          string   `json:"cpu"`
	Hostname     string   `json:"hostname"`
	LvmReserved  int      `json:"lvm_reserved"`
	Molitor      bool     `json:"molitor"`
}

// This runs gets the info from the molitor file
func readMolitor() {
	b, err := ioutil.ReadFile("/home/nick/Desktop/molitor.json")
	if err != nil {
		fmt.Print(err)
	}

	data := AutoGenerated{}
	err = json.Unmarshal(b, &data)
	if err != nil {
		fmt.Print(err)
	}
	fmt.Print("CID: ", data.Customerid, " - ", "location: ", data.Location, "\n")

}
